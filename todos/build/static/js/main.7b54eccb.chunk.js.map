{"version":3,"sources":["components/layout/Footer/Footer.js","components/forms/Button/Button.js","components/forms/Fieldset/Fieldset.js","components/forms/Input/Input.js","components/forms/TextArea/TextArea.js","components/layout/Header/UserOptions/UserOptions.js","components/layout/Header/Header.js","components/layout/Main/Main.js","views/Account/Account.js","store/auth/auth.slice.js","views/LoginForm/LoginForm.js","views/Logout/Logout.js","store/todos/todos.slice.js","utilities/hooks.js","views/Todo/Todo.js","views/TodoForm/TodoForm.js","views/TodoList/TodoListItem.js","utilities/helpers.js","services/LocalStorage.service.js","views/TodoList/TodoListFilters.js","views/TodoList/TodoList.js","App.js","store/users/users.slice.js","store/index.js","index.js"],"names":["Footer","className","Button","children","modifiers","onClickHandler","type","classNames","length","i","onClick","Fieldset","legend","Input","label","id","name","value","updateValue","onBlurHandler","required","htmlFor","undefined","checked","onChange","e","target","onBlur","TextArea","UserOptions","username","isExpanded","setIsExpanded","to","Header","useState","currentUser","useSelector","state","auth","headerRef","useRef","location","useLocation","useEffect","pathname","ref","current","contains","relatedTarget","Main","Account","email","Date","createdAt","toLocaleDateString","initialState","isAuthenticated","authSlice","createSlice","reducers","login","action","payload","logout","actions","LoginForm","msg","inputEmailValue","setInputEmailValue","inputPasswordValue","setInputPasswordValue","errorMsg","setErrorMsg","usersList","users","dispatch","useDispatch","history","useHistory","getCurrentUser","find","user","method","onSubmit","preventDefault","password","isValidPassword","push","Logout","todosSlice","nanoid","toISOString","title","body","userId","done","addTodo","reducer","prepare","deleteTodo","filter","todo","updateTodo","map","toggleTodo","todoId","index","findIndex","slice","deleteAllTodos","useToggle","setState","toggle","useCallback","Todo","isTitleEditable","setIsTitleEditable","isBodyEditable","setIsBodyEditable","titleRef","bodyRef","currentTodo","todos","focus","handleSubmit","console","log","TodoForm","closeForm","titleValue","setTitleValue","bodyValue","setBodyValue","prev","TodoListItem","isChecked","setIsChecked","todoSlug","toString","normalize","replace","toLowerCase","trim","checkboxState","LocalStorage","key","serialItem","localStorage","getItem","JSON","parse","stringify","setItem","removeItem","TodoListFilters","currentView","setCurrentView","allModifiers","ongoingModifiers","completedModifiers","TodoList","todosList","setTodosList","isToggled","setIsToggled","allTodos","userTodos","list","userTodosList","App","isLoggedIn","path","component","exact","strict","usersSlice","addUser","deleteUser","updateUser","authReducer","todosReducer","todosMiddleware","store","next","result","authState","getState","todosState","userFromLocalStorage","preloadedAuth","todosFromLocalStorage","preloadedState","configureStore","middleware","getDefaultMiddleware","concat","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7b54eccb.chunk.js","sourcesContent":["import \"./Footer.scss\";\n\nfunction Footer() {\n  return (\n    <footer className=\"footer\">\n      <div className=\"container\">\n        <p className=\"copyright\">\n          React Redux ToDos. MIT 2021. Armand Philippot.\n        </p>\n      </div>\n    </footer>\n  );\n}\n\nexport default Footer;\n","function Button({ children, modifiers, onClickHandler, type = \"button\" }) {\n  let classNames = \"btn\";\n\n  if (modifiers && modifiers.length > 0) {\n    for (let i = 0; i < modifiers.length; i++) {\n      classNames += ` btn--${modifiers[i]}`;\n    }\n  }\n\n  return (\n    <button type={type} className={classNames} onClick={onClickHandler}>\n      {children}\n    </button>\n  );\n}\n\nexport default Button;\n","function Fieldset({ children, legend }) {\n  return (\n    <fieldset className=\"form__fieldset\">\n      <legend className=\"form__legend\">{legend}</legend>\n      {children}\n    </fieldset>\n  );\n}\n\nexport default Fieldset;\n","function Input({\n  label,\n  id,\n  name,\n  value,\n  updateValue,\n  onBlurHandler,\n  required,\n  type = \"text\",\n}) {\n  const handleChange = (e) => {\n    e.target.type === \"checkbox\"\n      ? updateValue(e.target.checked)\n      : updateValue(e.target.value);\n  };\n\n  return (\n    <>\n      {label && (\n        <label htmlFor={id} className=\"form__label\">\n          {label}\n        </label>\n      )}\n      <input\n        type={type}\n        id={id}\n        name={name}\n        value={type === \"checkbox\" ? undefined : value}\n        checked={type === \"checkbox\" ? value : null}\n        required={required ? \"required\" : false}\n        onChange={handleChange}\n        onBlur={onBlurHandler}\n        className=\"form__field\"\n      />\n    </>\n  );\n}\n\nexport default Input;\n","function TextArea({ label, id, value, updateValue }) {\n  const handleChange = (e) => {\n    updateValue(e.target.value);\n  };\n\n  return (\n    <>\n      {label ? (\n        <label htmlFor={id} className=\"form__label\">\n          {label}\n        </label>\n      ) : (\n        \"\"\n      )}\n      <textarea\n        value={value}\n        onChange={handleChange}\n        className=\"form__field form__field--textarea\"\n      />\n    </>\n  );\n}\n\nexport default TextArea;\n","import { Link } from \"react-router-dom\";\nimport { Button } from \"../../../forms\";\nimport \"./UserOptions.scss\";\n\nfunction UserOptions({ username, isExpanded, setIsExpanded }) {\n  const displayUserOptions = () => {\n    return (\n      <nav className=\"nav nav--user\">\n        <ul className=\"nav__list\">\n          <li className=\"nav__item\">\n            <Link to=\"/account\" className=\"nav__link\">\n              Account\n            </Link>\n          </li>\n          <li className=\"nav__item\">\n            <Link to=\"/logout\" className=\"nav__link\">\n              Logout\n            </Link>\n          </li>\n        </ul>\n      </nav>\n    );\n  };\n\n  return (\n    <>\n      <Button\n        modifiers={[\"user\"]}\n        onClickHandler={() => setIsExpanded(!isExpanded)}\n      >\n        {username}\n      </Button>\n      {isExpanded ? displayUserOptions() : \"\"}\n    </>\n  );\n}\n\nexport default UserOptions;\n","import { useSelector } from \"react-redux\";\nimport UserOptions from \"./UserOptions/UserOptions\";\nimport \"./Header.scss\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { useLocation } from \"react-router\";\n\nfunction Header() {\n  const [isExpanded, setIsExpanded] = useState(false);\n  const currentUser = useSelector((state) => state.auth.currentUser);\n  const headerRef = useRef(null);\n  const location = useLocation();\n\n  useEffect(() => {\n    setIsExpanded(false);\n  }, [location.pathname]);\n\n  const closeModal = (e) => {\n    if (!headerRef.current.contains(e.relatedTarget)) setIsExpanded(false);\n  };\n\n  return (\n    <header ref={headerRef} className=\"header\" onBlur={closeModal}>\n      <div className=\"container\">\n        <h1 className=\"branding\">ToDos App</h1>\n        {currentUser ? (\n          <UserOptions\n            username={currentUser.username}\n            isExpanded={isExpanded}\n            setIsExpanded={setIsExpanded}\n          />\n        ) : (\n          \"\"\n        )}\n      </div>\n    </header>\n  );\n}\n\nexport default Header;\n","import \"./Main.scss\";\n\nfunction Main({ children }) {\n  return <main className=\"main container\">{children}</main>;\n}\n\nexport default Main;\n","import { useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport \"./Account.scss\";\n\nfunction Account() {\n  const currentUser = useSelector((state) => state.auth.currentUser);\n\n  return (\n    <div>\n      <Link to=\"/\">Back to your todo list</Link>\n      <h2>Account</h2>\n      <dl className=\"account-details\">\n        <dt className=\"account-details__headings\">Username</dt>\n        <dd className=\"account-details__data\">{currentUser.username}</dd>\n        <dt className=\"account-details__headings\">Email</dt>\n        <dd className=\"account-details__data\">{currentUser.email}</dd>\n        <dt className=\"account-details__headings\">Creation date</dt>\n        <dd className=\"account-details__data\">\n          {new Date(currentUser.createdAt).toLocaleDateString()}\n        </dd>\n      </dl>\n    </div>\n  );\n}\n\nexport default Account;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  currentUser: null,\n  isAuthenticated: false,\n};\n\nexport const authSlice = createSlice({\n  name: \"auth\",\n  initialState,\n  reducers: {\n    login: (state, action) => {\n      return { ...state, currentUser: action.payload, isAuthenticated: true };\n    },\n    logout: () => {\n      return initialState;\n    },\n  },\n});\n\nexport const { login, logout } = authSlice.actions;\n\nexport default authSlice.reducer;\n","import { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport { Button, Fieldset, Input } from \"../../components/forms\";\nimport { login } from \"../../store/auth/auth.slice\";\n\nfunction LoginForm() {\n  const [inputEmailValue, setInputEmailValue] = useState(\"\");\n  const [inputPasswordValue, setInputPasswordValue] = useState(\"\");\n  const [errorMsg, setErrorMsg] = useState(\"\");\n  const usersList = useSelector((state) => state.users);\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const getCurrentUser = (email) => {\n    return usersList.find((user) => user.email === email);\n  };\n\n  const isValidUser = (email) => {\n    const currentUser = getCurrentUser(email);\n    return currentUser ? true : false;\n  };\n\n  const isValidPassword = (currentUser, password) => {\n    return currentUser.password === password;\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (isValidUser(inputEmailValue)) {\n      const currentUser = getCurrentUser(inputEmailValue);\n\n      if (isValidPassword(currentUser, inputPasswordValue)) {\n        setErrorMsg(\"\");\n        dispatch(login(currentUser));\n        history.push(\"/\");\n      } else {\n        setErrorMsg(\"The password does not match.\");\n      }\n    } else {\n      setErrorMsg(\"This email address does not exist.\");\n    }\n  };\n\n  const displayError = (msg) => {\n    return msg ? <p>{msg}</p> : \"\";\n  };\n\n  return (\n    <form\n      action=\"#\"\n      method=\"post\"\n      className=\"form form--login\"\n      onSubmit={handleSubmit}\n    >\n      {displayError(errorMsg)}\n      <Fieldset legend=\"Sign In\">\n        <Input\n          label=\"Email\"\n          id=\"login-email\"\n          name=\"login-email\"\n          value={inputEmailValue}\n          updateValue={setInputEmailValue}\n          type=\"email\"\n          required\n        />\n        <Input\n          label=\"Password\"\n          id=\"login-password\"\n          name=\"login-password\"\n          value={inputPasswordValue}\n          updateValue={setInputPasswordValue}\n          type=\"password\"\n          required\n        />\n        <Button type=\"submit\" modifiers={[\"submit\"]}>\n          Log in\n        </Button>\n      </Fieldset>\n    </form>\n  );\n}\n\nexport default LoginForm;\n","import { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport { logout } from \"../../store/auth/auth.slice\";\n\nfunction Logout() {\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  useEffect(() => {\n    dispatch(logout());\n    history.push(\"/\");\n  });\n\n  return <>Logging out...</>;\n}\n\nexport default Logout;\n","import { createSlice, nanoid } from \"@reduxjs/toolkit\";\n\nexport const todosSlice = createSlice({\n  name: \"todos\",\n  initialState: [\n    {\n      id: nanoid(),\n      createdAt: new Date().toISOString(),\n      title: \"Build a todo app\",\n      body: \"\",\n      userId: \"demo\",\n      done: false,\n    },\n  ],\n  reducers: {\n    addTodo: {\n      reducer: (state, action) => {\n        state.push(action.payload);\n      },\n      prepare: ({ userId, title, body = \"\" }) => {\n        const id = nanoid();\n        const createdAt = new Date().toISOString();\n        return { payload: { id, createdAt, userId, title, body } };\n      },\n    },\n    deleteTodo: (state, action) => {\n      return state.filter((todo) => todo.id !== action.payload);\n    },\n    updateTodo: (state, action) => {\n      return state.map((todo) => {\n        if (todo.id !== action.payload.id) return todo;\n        return { ...todo, ...action.payload };\n      });\n    },\n    toggleTodo: (state, action) => {\n      const todoId = action.payload;\n      const index = state.findIndex((todo) => todo.id === todoId);\n      const todo = state[index];\n      return [\n        ...state.slice(0, index),\n        { ...todo, done: !todo.done },\n        ...state.slice(index + 1),\n      ];\n    },\n    deleteAllTodos: () => {\n      return [];\n    },\n  },\n});\n\nexport const { addTodo, deleteTodo, updateTodo, toggleTodo, deleteAllTodos } =\n  todosSlice.actions;\n\nexport default todosSlice.reducer;\n","import { useCallback, useState } from \"react\";\n\nfunction useToggle(initialState = false) {\n  const [state, setState] = useState(initialState);\n  const toggle = useCallback(() => setState((state) => !state), []);\n\n  return [state, toggle];\n}\n\nexport default useToggle;\n","import { useEffect, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useLocation } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport { updateTodo } from \"../../store/todos/todos.slice\";\nimport useToggle from \"../../utilities/hooks\";\nimport \"./Todo.scss\";\n\nfunction Todo() {\n  const [isTitleEditable, setIsTitleEditable] = useToggle();\n  const [isBodyEditable, setIsBodyEditable] = useToggle();\n  const titleRef = useRef(null);\n  const bodyRef = useRef(null);\n  const location = useLocation();\n  const todoId = location.state.todoId;\n  const currentTodo = useSelector((state) => state.todos).find(\n    (todo) => todo.id === todoId\n  );\n  const { title, body } = currentTodo;\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    titleRef.current && titleRef.current.focus();\n    bodyRef.current && bodyRef.current.focus();\n  });\n\n  const handleSubmit = (e) => {\n    console.log(e);\n  };\n\n  return (\n    <>\n      <Link to=\"/\">Back to your todo list</Link>\n      <div className=\"todo\">\n        {isTitleEditable ? (\n          <form\n            action=\"#\"\n            method=\"post\"\n            className=\"todo-form todo__title\"\n            onSubmit={handleSubmit}\n          >\n            <input\n              ref={titleRef}\n              className=\"todo-form__field\"\n              type=\"text\"\n              name=\"title\"\n              value={title}\n              onChange={(e) =>\n                dispatch(updateTodo({ ...currentTodo, title: e.target.value }))\n              }\n              onBlur={setIsTitleEditable}\n            />\n          </form>\n        ) : (\n          <div className=\"todo__title\" onClick={setIsTitleEditable}>\n            {title}\n          </div>\n        )}\n        {isBodyEditable ? (\n          <form\n            action=\"#\"\n            method=\"post\"\n            className=\"todo-form todo__body\"\n            onSubmit={handleSubmit}\n          >\n            <textarea\n              ref={bodyRef}\n              className=\"todo-form__field todo-form__field--textarea\"\n              name=\"body\"\n              value={body}\n              onChange={(e) =>\n                dispatch(updateTodo({ ...currentTodo, body: e.target.value }))\n              }\n              onBlur={setIsBodyEditable}\n            />\n          </form>\n        ) : (\n          <div className=\"todo__body\" onClick={setIsBodyEditable}>\n            {body}\n          </div>\n        )}\n      </div>\n    </>\n  );\n}\n\nexport default Todo;\n","import { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Button, Fieldset, Input, TextArea } from \"../../components/forms\";\nimport { addTodo } from \"../../store/todos/todos.slice\";\n\nfunction TodoForm({ userId, closeForm }) {\n  const [titleValue, setTitleValue] = useState(\"\");\n  const [bodyValue, setBodyValue] = useState(\"\");\n  const dispatch = useDispatch();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    closeForm((prev) => !prev);\n  };\n\n  const handleSave = () => {\n    const newTodo = { userId, title: titleValue, body: bodyValue };\n    dispatch(addTodo(newTodo));\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"form form--todo\">\n      <Fieldset legend=\"Add a new todo\">\n        <Input label=\"Title\" value={titleValue} updateValue={setTitleValue} />\n        <TextArea\n          label=\"Details\"\n          value={bodyValue}\n          updateValue={setBodyValue}\n        />\n        <Button\n          type=\"submit\"\n          modifiers={[\"submit\"]}\n          onClickHandler={handleSave}\n        >\n          Save\n        </Button>\n      </Fieldset>\n    </form>\n  );\n}\n\nexport default TodoForm;\n","import { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { Button, Input } from \"../../components/forms\";\nimport { deleteTodo, toggleTodo } from \"../../store/todos/todos.slice\";\nimport { slugify } from \"../../utilities/helpers\";\n\nfunction TodoListItem({ todo }) {\n  const { id, createdAt, title, done } = todo;\n  const [isChecked, setIsChecked] = useState(false);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (done) setIsChecked(true);\n  }, [done]);\n\n  const handleTodoDone = (checkboxState) => {\n    setIsChecked(checkboxState);\n    dispatch(toggleTodo(id));\n  };\n\n  const todoSlug = slugify(title);\n\n  const classNames = `todos-list__item ${\n    isChecked ? \"todos-list__item--done\" : \"\"\n  }`;\n\n  return (\n    <li className={classNames}>\n      <span className=\"todo__date\">\n        {new Date(createdAt).toLocaleDateString()}\n      </span>\n      <span className=\"todo__title\">\n        <Link\n          to={{ pathname: `/todo/${todoSlug}`, state: { todoId: todo.id } }}\n        >\n          {title}\n        </Link>\n      </span>\n      <Input\n        type=\"checkbox\"\n        label=\"Done?\"\n        id={id}\n        value={isChecked}\n        updateValue={handleTodoDone}\n      />\n      <Button\n        modifiers={[\"action\", \"delete\"]}\n        onClickHandler={() => dispatch(deleteTodo(id))}\n      >\n        Delete\n      </Button>\n    </li>\n  );\n}\n\nexport default TodoListItem;\n","/**\n * Convert a text into a slug or id.\n * https://gist.github.com/codeguy/6684588#gistcomment-3332719\n *\n * @param {string} text Text to slugify.\n */\nconst slugify = (text) => {\n  return text\n    .toString()\n    .normalize(\"NFD\")\n    .replace(/[\\u0300-\\u036f]/g, \"\")\n    .toLowerCase()\n    .trim()\n    .replace(/\\s+/g, \"-\")\n    .replace(/[^\\w-]+/g, \"-\")\n    .replace(/--+/g, \"-\")\n    .replace(/^-|-$/g, \"\");\n};\n\nexport { slugify };\n","export const LocalStorage = {\n  get(key) {\n    try {\n      const serialItem = localStorage.getItem(key);\n      if (!serialItem) return undefined;\n      return JSON.parse(serialItem);\n    } catch (e) {\n      console.log(e);\n      return undefined;\n    }\n  },\n  set(key, value) {\n    try {\n      const serialItem = JSON.stringify(value);\n      localStorage.setItem(key, serialItem);\n    } catch (e) {\n      console.log(e);\n    }\n  },\n  remove(key) {\n    localStorage.removeItem(key);\n  },\n  clear() {\n    localStorage.clear();\n  },\n};\n","import { Button } from \"../../components/forms\";\n\nfunction TodoListFilters({ currentView, setCurrentView }) {\n  let allModifiers = [\"filters\"];\n  let ongoingModifiers = [\"filters\"];\n  let completedModifiers = [\"filters\"];\n\n  switch (currentView) {\n    case \"all\":\n      allModifiers.push(\"current\");\n      break;\n    case \"ongoing\":\n      ongoingModifiers.push(\"current\");\n      break;\n    case \"completed\":\n      completedModifiers.push(\"current\");\n      break;\n    default:\n      break;\n  }\n\n  return (\n    <div className=\"todos-filters\">\n      Show:\n      <Button\n        modifiers={allModifiers}\n        onClickHandler={() => setCurrentView(\"all\")}\n      >\n        All\n      </Button>\n      <Button\n        modifiers={ongoingModifiers}\n        onClickHandler={() => setCurrentView(\"ongoing\")}\n      >\n        Ongoing\n      </Button>\n      <Button\n        modifiers={completedModifiers}\n        onClickHandler={() => setCurrentView(\"completed\")}\n      >\n        Completed\n      </Button>\n    </div>\n  );\n}\n\nexport default TodoListFilters;\n","import { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Button } from \"../../components/forms\";\nimport TodoForm from \"../TodoForm/TodoForm\";\nimport TodoListItem from \"./TodoListItem\";\nimport \"./TodoList.scss\";\nimport { deleteAllTodos } from \"../../store/todos/todos.slice\";\nimport { LocalStorage } from \"../../services/LocalStorage.service\";\nimport TodoListFilters from \"./TodoListFilters\";\n\nfunction TodoList() {\n  const [todosList, setTodosList] = useState([]);\n  const [currentView, setCurrentView] = useState(\"all\");\n  const dispatch = useDispatch();\n  const [isToggled, setIsToggled] = useState(false);\n  const currentUser = useSelector((state) => state.auth.currentUser);\n  const allTodos = useSelector((state) => state.todos);\n\n  useEffect(() => {\n    const userTodos = allTodos.filter((todo) => todo.userId === currentUser.id);\n\n    setTodosList(() => {\n      let list;\n\n      switch (currentView) {\n        case \"completed\":\n          list = userTodos.filter((todo) => todo.done);\n          break;\n        case \"ongoing\":\n          list = userTodos.filter((todo) => !todo.done);\n          break;\n        default:\n          list = userTodos;\n          break;\n      }\n\n      return list;\n    });\n  }, [currentView, allTodos, currentUser.id]);\n\n  useEffect(() => {\n    LocalStorage.set(\"todoList\", allTodos);\n  });\n\n  const userTodosList = todosList.map((todo) => (\n    <TodoListItem key={todo.id} todo={todo} />\n  ));\n\n  return (\n    <div>\n      <h2>Welcome back {currentUser.username}!</h2>\n      <div className=\"todos-actions\">\n        <Button\n          modifiers={[\"action\"]}\n          onClickHandler={() => setIsToggled(!isToggled)}\n        >\n          New todo\n        </Button>\n        <Button\n          modifiers={[\"action\", \"delete\"]}\n          onClickHandler={() => dispatch(deleteAllTodos())}\n        >\n          Delete all\n        </Button>\n      </div>\n      {isToggled ? (\n        <TodoForm userId={currentUser.id} closeForm={setIsToggled} />\n      ) : (\n        \"\"\n      )}\n      <TodoListFilters\n        currentView={currentView}\n        setCurrentView={setCurrentView}\n      />\n      {userTodosList.length > 0 ? (\n        <ul className=\"todos-list\">{userTodosList}</ul>\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n}\n\nexport default TodoList;\n","import { useSelector } from \"react-redux\";\nimport { Redirect, Route, Switch } from \"react-router\";\nimport { Footer, Header, Main } from \"./components/layout\";\nimport Account from \"./views/Account/Account\";\nimport LoginForm from \"./views/LoginForm/LoginForm\";\nimport Logout from \"./views/Logout/Logout\";\nimport Todo from \"./views/Todo/Todo\";\nimport TodoList from \"./views/TodoList/TodoList\";\nimport \"modern-normalize\";\nimport \"./App.scss\";\n\nfunction App() {\n  const isLoggedIn = useSelector((state) => state.auth.isAuthenticated);\n\n  return (\n    <>\n      <Header />\n      <Main>\n        <Switch>\n          <Route path=\"/account\" component={Account}>\n            {isLoggedIn ? <Account /> : <Redirect to=\"/login\" />}\n          </Route>\n          <Route path=\"/login\" component={LoginForm} />\n          <Route path=\"/logout\" component={Logout} />\n          <Route path=\"/todo/:string\" component={Todo}>\n            {isLoggedIn ? <Todo /> : <Redirect to=\"/login\" />}\n          </Route>\n          <Route exact strict path=\"/\">\n            {isLoggedIn ? <TodoList /> : <Redirect to=\"/login\" />}\n          </Route>\n        </Switch>\n      </Main>\n      <Footer />\n    </>\n  );\n}\n\nexport default App;\n","import { createSlice, nanoid } from \"@reduxjs/toolkit\";\n\nexport const usersSlice = createSlice({\n  name: \"users\",\n  initialState: [\n    {\n      id: \"demo\",\n      createdAt: new Date().toISOString(),\n      username: \"Demo\",\n      email: \"demo@email.com\",\n      password: \"demo\",\n    },\n  ],\n  reducers: {\n    addUser: {\n      reducer: (state, action) => {\n        state.push(action.payload);\n      },\n      prepare: (username, email, password) => {\n        const id = nanoid();\n        const createdAt = new Date().toISOString();\n        return { payload: { id, username, email, password, createdAt } };\n      },\n    },\n    deleteUser: (state, action) => {\n      state.filter((user) => user.id !== action.payload);\n    },\n    updateUser: (state, action) => {\n      state.map((user) => {\n        if (user.id !== action.payload.id) return user;\n        return { ...user, ...action.payload };\n      });\n    },\n  },\n});\n\nexport const { addUser, deleteUser, updateUser } = usersSlice.actions;\n\nexport default usersSlice.reducer;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport { LocalStorage } from \"../services/LocalStorage.service\";\nimport authReducer from \"./auth/auth.slice\";\nimport todosReducer from \"./todos/todos.slice\";\nimport usersReducer from \"./users/users.slice\";\n\nconst reducer = {\n  auth: authReducer,\n  todos: todosReducer,\n  users: usersReducer,\n};\n\nconst todosMiddleware = (store) => (next) => (action) => {\n  const { type } = action;\n  const result = next(action);\n\n  switch (type) {\n    case \"auth/login\":\n      const authState = store.getState().auth;\n      LocalStorage.set(\"todoUser\", authState.currentUser);\n      break;\n    case \"auth/logout\":\n      LocalStorage.remove(\"todoUser\");\n      break;\n    case \"todos/updateTodo\":\n      const todosState = store.getState().todos;\n      LocalStorage.set(\"todoList\", todosState);\n      break;\n    default:\n      break;\n  }\n\n  return result;\n};\n\nconst userFromLocalStorage = LocalStorage.get(\"todoUser\");\nconst preloadedAuth = userFromLocalStorage\n  ? { isAuthenticated: true, currentUser: userFromLocalStorage }\n  : undefined;\n\nconst todosFromLocalStorage = LocalStorage.get(\"todoList\");\nconst preloadedTodos = todosFromLocalStorage\n  ? todosFromLocalStorage\n  : undefined;\n\nconst preloadedState = {\n  auth: preloadedAuth,\n  todos: preloadedTodos,\n};\n\nexport default configureStore({\n  reducer,\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware().concat(todosMiddleware),\n  preloadedState,\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./App\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"app\")\n);\n"],"sourceRoot":""}