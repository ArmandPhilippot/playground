{"version":3,"sources":["reportWebVitals.js","components/Header/Header.js","components/commons/Button.js","components/commons/Form.js","components/commons/Fieldset.js","components/commons/Input.js","components/commons/InputRange.js","components/commons/Option.js","components/commons/Select.js","components/MemeForm/MemeFieldset/MemeFieldset.js","components/MemeForm/MemeForm.js","components/MemePreview/Headline/Headline.js","components/MemePreview/MemePreview.js","components/Main/Main.js","components/Footer/Footer.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Header","className","Button","body","modifier","onClick","classNames","Form","children","action","method","styles","onSubmitHandler","onSubmit","style","Fieldset","legend","Input","ref","label","id","name","type","value","onChangeHandler","onBlurHandler","additionalClasses","htmlFor","onChange","onBlur","forwardRef","InputRange","min","max","step","unit","title","Option","Select","options","optionsList","map","option","optionValue","replace","MemeFieldset","headline","setHeadline","xOptions","yOptions","text","fontSize","fontUnit","xPos","yPos","useState","inputTextValue","setInputTextValue","inputRangeValue","setInputRangeValue","selectX","setSelectX","selectY","setSelectY","useEffect","previous","object","e","target","Number","filter","MemeForm","headlines","setHeadlines","fieldsetId","setFieldsetId","horizontalOptions","verticalOptions","fieldsetData","length","fieldsetsList","preventDefault","array","Headline","inputRef","useRef","isEditing","setIsEditing","current","focus","inputValue","setInputValue","gridRow","alignSelf","getYPos","gridColumn","textAlign","gridColumnStart","gridColumnEnd","justifySelf","getXPos","a","fetch","response","json","result","MemePreview","memesList","setMemesList","isFetched","setIsFetched","fetchMemes","data","memes","selectedMeme","setSelectedMeme","headlinesList","src","url","alt","randomIndex","Math","floor","random","Main","Footer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.460a0db6.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","function Header() {\n  return (\n    <header className=\"header\">\n      <h1 className=\"header__branding\">Meme Generator</h1>\n    </header>\n  );\n}\n\nexport default Header;\n","function Button({ body, modifier, onClick }) {\n  const classNames = `btn ${modifier ? `btn--${modifier}` : \"\"}`;\n\n  return (\n    <button className={classNames} onClick={onClick}>\n      {body}\n    </button>\n  );\n}\n\nexport default Button;\n","function Form({\n  children,\n  action = \"#\",\n  method = \"post\",\n  styles,\n  onSubmitHandler,\n}) {\n  return (\n    <form\n      action={action}\n      method={method}\n      onSubmit={onSubmitHandler}\n      className=\"form\"\n      style={styles}\n    >\n      {children}\n    </form>\n  );\n}\n\nexport default Form;\n","function Fieldset({ children, legend = \"Legend\" }) {\n  return (\n    <fieldset className=\"form__fieldset\">\n      <legend className=\"form__legend\">{legend}</legend>\n      {children}\n    </fieldset>\n  );\n}\n\nexport default Fieldset;\n","import { forwardRef } from \"react\";\n\nfunction Input(\n  {\n    label,\n    id,\n    name,\n    type = \"text\",\n    value,\n    onChangeHandler,\n    onBlurHandler,\n    additionalClasses = \"\",\n  },\n  ref\n) {\n  const classNames = `form__input ${additionalClasses}`;\n\n  return (\n    <>\n      {label ? (\n        <label className=\"form__label\" htmlFor={id}>\n          {label}\n        </label>\n      ) : (\n        \"\"\n      )}\n      <input\n        id={id}\n        name={name}\n        ref={ref}\n        type={type}\n        value={value}\n        onChange={onChangeHandler}\n        onBlur={onBlurHandler}\n        className={classNames}\n      />\n    </>\n  );\n}\n\nexport default forwardRef(Input);\n","function InputRange({\n  label,\n  id,\n  name,\n  min = 5,\n  max = 200,\n  step = 1,\n  unit = \"px\",\n  value,\n  onChangeHandler,\n}) {\n  return (\n    <>\n      {label ? (\n        <label className=\"form__label\" htmlFor={id}>\n          {label}\n        </label>\n      ) : (\n        \"\"\n      )}\n      <input\n        type=\"range\"\n        id={id}\n        name={name}\n        min={min}\n        max={max}\n        step={step}\n        value={value}\n        onChange={onChangeHandler}\n        title={`${value}${unit}`}\n        className=\"form__input form__input--range\"\n      />\n    </>\n  );\n}\n\nexport default InputRange;\n","function Option({ value, body }) {\n  return <option value={value}>{body}</option>;\n}\n\nexport default Option;\n","import Option from \"./Option\";\n\nfunction Select({ id, name, label, options, value, onChangeHandler }) {\n  const optionsList = options.map((option) => {\n    const optionValue = option.replace(\" \", \"-\");\n    return <Option key={optionValue} value={optionValue} body={option} />;\n  });\n\n  return (\n    <>\n      {label ? (\n        <label className=\"form__label\" htmlFor={id}>\n          {label}\n        </label>\n      ) : (\n        \"\"\n      )}\n      <select\n        id={id}\n        name={name}\n        className=\"form__select\"\n        value={value}\n        onChange={onChangeHandler}\n      >\n        {optionsList}\n      </select>\n    </>\n  );\n}\n\nexport default Select;\n","import { useEffect, useState } from \"react\";\nimport Button from \"../../commons/Button\";\nimport Fieldset from \"../../commons/Fieldset\";\nimport Input from \"../../commons/Input\";\nimport InputRange from \"../../commons/InputRange\";\nimport Select from \"../../commons/Select\";\n\nfunction MemeFieldset({ headline, setHeadline, xOptions, yOptions }) {\n  const { id, legend, text, fontSize, fontUnit, xPos, yPos } = headline;\n  const [inputTextValue, setInputTextValue] = useState(text);\n  const [inputRangeValue, setInputRangeValue] = useState(fontSize);\n  const [selectX, setSelectX] = useState(xPos);\n  const [selectY, setSelectY] = useState(yPos);\n\n  useEffect(() => {\n    setInputTextValue(text);\n  }, [text]);\n\n  useEffect(() => {\n    setHeadline((previous) => {\n      return previous.map((object) => {\n        if (object.id !== id) return object;\n        return {\n          ...object,\n          text: inputTextValue,\n          fontSize: inputRangeValue,\n          xPos: selectX,\n          yPos: selectY,\n        };\n      });\n    });\n  }, [setHeadline, id, inputTextValue, inputRangeValue, selectX, selectY]);\n\n  const onChange = (e) => {\n    switch (e.target.name) {\n      case \"inputText\":\n        setInputTextValue(e.target.value);\n        break;\n      case \"inputRange\":\n        setInputRangeValue(Number(e.target.value));\n        break;\n      case \"selectX\":\n        setSelectX(e.target.value);\n        break;\n      case \"selectY\":\n        setSelectY(e.target.value);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const onClick = (e) => {\n    setHeadline((previous) => previous.filter((object) => object.id !== id));\n  };\n\n  return (\n    <Fieldset id={id} legend={legend}>\n      <Button body=\"Delete\" modifier=\"delete\" onClick={onClick} />\n      <div className=\"form__item\">\n        <Input\n          label=\"Enter your text:\"\n          id=\"inputText\"\n          name=\"inputText\"\n          value={inputTextValue}\n          onChangeHandler={onChange}\n        />\n      </div>\n      <div className=\"form__item\">\n        <InputRange\n          label=\"Choose a font-size:\"\n          id=\"inputRange\"\n          name=\"inputRange\"\n          value={inputRangeValue}\n          unit={fontUnit}\n          onChangeHandler={onChange}\n        />\n      </div>\n      <div className=\"form__item\">\n        <Select\n          label=\"Select the vertical position:\"\n          id=\"selectY\"\n          name=\"selectY\"\n          options={yOptions}\n          value={selectY}\n          onChangeHandler={onChange}\n        />\n      </div>\n      <div className=\"form__item\">\n        <Select\n          label=\"Select the horizontal position:\"\n          id=\"selectX\"\n          name=\"selectX\"\n          options={xOptions}\n          value={selectX}\n          onChangeHandler={onChange}\n        />\n      </div>\n    </Fieldset>\n  );\n}\n\nexport default MemeFieldset;\n","import { useState } from \"react\";\nimport Button from \"../commons/Button\";\nimport Form from \"../commons/Form\";\nimport MemeFieldset from \"./MemeFieldset/MemeFieldset\";\n\nfunction MemeForm({ headlines, setHeadlines }) {\n  const [fieldsetId, setFieldsetId] = useState(1);\n  const horizontalOptions = [\"Left\", \"Right\", \"Center\"];\n  const verticalOptions = [\"Top\", \"Bottom\", \"Middle\"];\n\n  const fieldsetData = {\n    id: fieldsetId,\n    legend: `Text settings ${fieldsetId}`,\n    text: \"Edit here...\",\n    fontSize: 100,\n    fontUnit: \"%\",\n    xPos: horizontalOptions[(fieldsetId - 1) % horizontalOptions.length],\n    yPos: verticalOptions[(fieldsetId - 1) % verticalOptions.length],\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n  };\n\n  const fieldsetsList = headlines.map((headline) => {\n    return (\n      <MemeFieldset\n        key={headline.id}\n        headline={headline}\n        setHeadline={setHeadlines}\n        xOptions={horizontalOptions}\n        yOptions={verticalOptions}\n      />\n    );\n  });\n\n  const addNewFieldset = () => {\n    setFieldsetId((previous) => previous + 1);\n    setHeadlines((array) => [...array, fieldsetData]);\n  };\n\n  return (\n    <div className=\"meme-form\">\n      <Form onSubmitHandler={onSubmit}>\n        {fieldsetsList}\n        {fieldsetsList.length < 4 && (\n          <Button body=\"Add new text\" onClick={addNewFieldset} modifier=\"add\" />\n        )}\n      </Form>\n    </div>\n  );\n}\n\nexport default MemeForm;\n","import { useEffect, useRef, useState } from \"react\";\nimport Form from \"../../commons/Form\";\nimport Input from \"../../commons/Input\";\n\nfunction Headline({ id, text, fontSize, xPos, yPos, setHeadlines }) {\n  const inputRef = useRef(null);\n  const [isEditing, setIsEditing] = useState(false);\n  useEffect(() => {\n    isEditing && inputRef.current.focus();\n  });\n\n  const [inputValue, setInputValue] = useState(text);\n  useEffect(() => {\n    setInputValue(text);\n  }, [text]);\n\n  const getXPos = () => {\n    let styles = {};\n    switch (xPos) {\n      case \"Left\":\n        styles = { gridColumn: 1, textAlign: \"left\" };\n        break;\n      case \"Right\":\n        styles = { gridColumn: 2, textAlign: \"right\" };\n        break;\n      case \"Center\":\n        styles = {\n          gridColumnStart: 1,\n          gridColumnEnd: \"span 2\",\n          justifySelf: \"center\",\n          textAlign: \"center\",\n        };\n        break;\n      default:\n        break;\n    }\n    return styles;\n  };\n\n  const getYPos = () => {\n    let styles = {};\n    switch (yPos) {\n      case \"Top\":\n        styles = { gridRow: 1 };\n        break;\n      case \"Bottom\":\n        styles = { gridRow: 3, alignSelf: \"end\" };\n        break;\n      case \"Middle\":\n        styles = { gridRow: 2, alignSelf: \"center\" };\n        break;\n      default:\n        break;\n    }\n    return styles;\n  };\n\n  const styles = {\n    fontSize: fontSize,\n    ...getYPos(),\n    ...getXPos(),\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    setIsEditing(false);\n  };\n\n  const updateText = (e) => {\n    setInputValue(e.target.value);\n  };\n\n  useEffect(() => {\n    setHeadlines((previous) => {\n      return previous.map((headline) => {\n        if (headline.id !== id) return headline;\n        return { ...headline, text: inputValue };\n      });\n    });\n  }, [setHeadlines, id, inputValue]);\n\n  useEffect(() => {\n    setHeadlines((previous) => {\n      return previous.map((headline) => {\n        if (headline.id !== id) return headline;\n        return { ...headline, text: inputValue };\n      });\n    });\n  }, [setHeadlines, id, inputValue]);\n\n  const onBlur = () => {\n    setIsEditing(false);\n  };\n\n  return (\n    <>\n      {isEditing ? (\n        <Form onSubmitHandler={onSubmit} styles={styles}>\n          <Input\n            value={inputValue}\n            ref={inputRef}\n            onChangeHandler={updateText}\n            onBlurHandler={onBlur}\n            additionalClasses=\"meme-preview__headline\"\n          />\n        </Form>\n      ) : (\n        <p\n          className=\"meme-preview__headline\"\n          onClick={() => setIsEditing(true)}\n          style={styles}\n        >\n          {inputValue}\n        </p>\n      )}\n    </>\n  );\n}\n\nexport default Headline;\n","import { useEffect, useState } from \"react\";\nimport Button from \"../commons/Button\";\nimport Headline from \"./Headline/Headline\";\n\nasync function fetchMemes() {\n  const response = await fetch(\"https://api.imgflip.com/get_memes\");\n  const result = await response.json();\n  return await result;\n}\n\nfunction MemePreview({ headlines, setHeadlines }) {\n  const [memesList, setMemesList] = useState([]);\n  const [isFetched, setIsFetched] = useState(false);\n  useEffect(() => {\n    fetchMemes().then((object) => setMemesList(object.data.memes));\n    setIsFetched(true);\n    return () => setIsFetched(false);\n  }, [setIsFetched]);\n\n  const [selectedMeme, setSelectedMeme] = useState({});\n  useEffect(() => {\n    setSelectedMeme(memesList[5]);\n  }, [memesList]);\n\n  const getRandomMeme = () => {\n    const randomIndex = Math.floor(Math.random() * memesList.length);\n    setSelectedMeme(memesList[randomIndex]);\n  };\n\n  const headlinesList = headlines.map((headline) => (\n    <Headline\n      key={headline.id}\n      id={headline.id}\n      text={headline.text}\n      fontSize={`${headline.fontSize}${headline.fontUnit}`}\n      xPos={headline.xPos}\n      yPos={headline.yPos}\n      setHeadlines={setHeadlines}\n    />\n  ));\n\n  return (\n    <div className=\"meme-preview\">\n      <div className=\"meme-preview__meme\">\n        {isFetched && selectedMeme ? (\n          <img\n            src={selectedMeme.url}\n            alt={selectedMeme.name}\n            className=\"meme-preview__image\"\n          />\n        ) : (\n          \"Loading...\"\n        )}\n        {headlinesList}\n      </div>\n      <Button body=\"Random image\" modifier=\"random\" onClick={getRandomMeme} />\n    </div>\n  );\n}\n\nexport default MemePreview;\n","import { useState } from \"react\";\nimport MemeForm from \"../MemeForm/MemeForm\";\nimport MemePreview from \"../MemePreview/MemePreview\";\n\nfunction Main() {\n  const [headlines, setHeadlines] = useState([]);\n\n  return (\n    <main className=\"main\">\n      <MemePreview headlines={headlines} setHeadlines={setHeadlines} />\n      <MemeForm headlines={headlines} setHeadlines={setHeadlines} />\n    </main>\n  );\n}\n\nexport default Main;\n","function Footer() {\n  return (\n    <footer className=\"footer\">\n      <p className=\"footer__copyright\">\n        Meme Generator. MIT 2021. Armand Philippot.\n      </p>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./style.css\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport Header from \"./components/Header/Header\";\nimport Main from \"./components/Main/Main\";\nimport Footer from \"./components/Footer/Footer\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Header />\n    <Main />\n    <Footer />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}